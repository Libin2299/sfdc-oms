<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Ensure_Refund</name>
        <label>Ensure Refund</label>
        <locationX>800</locationX>
        <locationY>501</locationY>
        <actionName>ensureRefundsOrderSummaryAsync</actionName>
        <actionType>ensureRefundsOrderSummaryAsync</actionType>
        <connector>
            <targetReference>Send_Notification</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>ensureRefundsAsyncInput</name>
            <value>
                <elementReference>ensureRefundsAsyncInputRepresentation</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>orderSummaryId</name>
            <value>
                <elementReference>$Record.ReferenceEntityId</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <name>Send_Notification</name>
        <label>Send Notification</label>
        <locationX>800</locationX>
        <locationY>656</locationY>
        <actionName>NotificationService</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Update_CreditMemo</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>event</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>reference</name>
            <value>
                <stringValue>RefundComplete</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>referenceEntityId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>Ensure_Refund_Assignment</name>
        <label>Ensure Refund Assignment</label>
        <locationX>536</locationX>
        <locationY>495</locationY>
        <assignmentItems>
            <assignToReference>ensureRefundsAsyncInputRepresentation.creditMemoId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Has_Amount</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Has_Amount</name>
        <label>Check Has Amount</label>
        <locationX>651</locationX>
        <locationY>497</locationY>
        <defaultConnector>
            <targetReference>Update_CreditMemo</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Amount</defaultConnectorLabel>
        <rules>
            <name>Has_Amount</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Balance</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Ensure_Refund</targetReference>
            </connector>
            <label>Has Amount</label>
        </rules>
    </decisions>
    <description>Order Management: Credit Memo Trigger Flow</description>
    <environments>Default</environments>
    <interviewLabel>Credit Memo Trigger Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Credit Memo Trigger Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Order_Summary</name>
        <label>Get Order Summary</label>
        <locationX>536</locationX>
        <locationY>366</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Ensure_Refund_Assignment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ReferenceEntityId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>OrderSummary</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_CreditMemo</name>
        <label>Update CreditMemo</label>
        <locationX>657</locationX>
        <locationY>656</locationY>
        <inputAssignments>
            <field>RefundStatus__c</field>
            <value>
                <stringValue>Posted</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>410</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>Get_Order_Summary</targetReference>
        </connector>
        <filterFormula>!ISPICKVAL({!$Record__Prior.RefundStatus__c}, &apos;Pending&apos;) &amp;&amp; ISPICKVAL({!$Record.RefundStatus__c}, &apos;Pending&apos;)</filterFormula>
        <object>CreditMemo</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
    <variables>
        <name>ensureRefundsAsyncInputRepresentation</name>
        <apexClass>ConnectApi__EnsureRefundsAsyncInputRepresentation</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
